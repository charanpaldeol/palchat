---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Contact - PalChat">
  <div class="container mx-auto px-4 py-12">
    <div class="max-w-2xl mx-auto">
      <!-- Simple Hero -->
      <div class="text-center mb-12">
        <h1 class="text-4xl lg:text-5xl font-bold text-gray-900 mb-4">
          Get in Touch
        </h1>
        <p class="text-lg text-gray-600">
          Have a question or want to join our community? We'd love to hear from you.
        </p>
      </div>

      <!-- Simple Contact Form -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-200 p-8">
        <form id="contact-form" class="space-y-6">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-2">Name (Optional)</label>
            <input
              type="text"
              id="name"
              name="name"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="Your name"
            />
          </div>

          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="your.email@example.com"
            />
          </div>

          <div>
            <label for="subject" class="block text-sm font-medium text-gray-700 mb-2">Subject *</label>
            <input
              type="text"
              id="subject"
              name="subject"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="What's this about?"
            />
          </div>

          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 mb-2">Message *</label>
            <textarea
              id="message"
              name="message"
              rows="5"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none"
              placeholder="Tell us more..."
            ></textarea>
          </div>

          <button
            type="submit"
            id="submit-btn"
            class="w-full bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium flex items-center justify-center gap-2"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
            </svg>
            <span id="submit-text">Send Message</span>
          </button>
        </form>

        <!-- Success/Error Messages -->
        <div id="message-container" class="mt-6 hidden">
          <div id="success-message" class="hidden p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg">
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
              </svg>
              <span id="success-text"></span>
            </div>
          </div>
          <div id="error-message" class="hidden p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg">
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
              </svg>
              <span id="error-text"></span>
            </div>
          </div>
        </div>
      </div>

      <!-- Simple Info Section -->
      <div class="mt-12 text-center">
        <h2 class="text-2xl font-bold text-gray-900 mb-4">Other Ways to Connect</h2>
        <div class="flex justify-center gap-6">
          <a href="#" class="flex items-center gap-2 text-gray-600 hover:text-blue-600 transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
            Twitter
          </a>
          <a href="#" class="flex items-center gap-2 text-gray-600 hover:text-blue-600 transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
            LinkedIn
          </a>
          <a href="#" class="flex items-center gap-2 text-gray-600 hover:text-blue-600 transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>
            </svg>
            GitHub
          </a>
        </div>
      </div>

      <!-- Simple FAQ -->
      <div class="mt-12">
        <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Frequently Asked Questions</h2>
        <div class="space-y-4">
          <div class="bg-gray-50 rounded-lg p-6">
            <h3 class="font-semibold text-gray-900 mb-2">How quickly will you respond?</h3>
            <p class="text-gray-600">We aim to respond within 24-48 hours.</p>
          </div>
          <div class="bg-gray-50 rounded-lg p-6">
            <h3 class="font-semibold text-gray-900 mb-2">Is my information secure?</h3>
            <p class="text-gray-600">Yes, we follow privacy-by-design principles and never share your data.</p>
          </div>
          <div class="bg-gray-50 rounded-lg p-6">
            <h3 class="font-semibold text-gray-900 mb-2">Can I remain anonymous?</h3>
            <p class="text-gray-600">Yes, you can contact us anonymously if you prefer.</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('contact-form');
      const submitBtn = document.getElementById('submit-btn');
      const submitText = document.getElementById('submit-text');
      const messageContainer = document.getElementById('message-container');
      const successMessage = document.getElementById('success-message');
      const errorMessage = document.getElementById('error-message');
      const successText = document.getElementById('success-text');
      const errorText = document.getElementById('error-text');

      function showMessage(type, message) {
        messageContainer.classList.add('hidden');
        successMessage.classList.add('hidden');
        errorMessage.classList.add('hidden');

        messageContainer.classList.remove('hidden');
        if (type === 'success') {
          successText.textContent = message;
          successMessage.classList.remove('hidden');
        } else {
          errorText.textContent = message;
          errorMessage.classList.remove('hidden');
        }

        setTimeout(() => {
          messageContainer.classList.add('hidden');
        }, 5000);
      }

      function setLoading(loading) {
        if (loading) {
          submitBtn.disabled = true;
          submitText.textContent = 'Sending...';
          submitBtn.classList.add('opacity-75');
        } else {
          submitBtn.disabled = false;
          submitText.textContent = 'Send Message';
          submitBtn.classList.remove('opacity-75');
        }
      }

      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(form);
        const data = {
          name: formData.get('name') || '',
          email: formData.get('email'),
          subject: formData.get('subject'),
          message: formData.get('message')
        };

        if (!data.email || !data.subject || !data.message) {
          showMessage('error', 'Please fill in all required fields.');
          return;
        }

        setLoading(true);

        try {
          const response = await fetch('/api/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          const result = await response.json();

          if (response.ok) {
            showMessage('success', 'Message sent successfully! We\'ll get back to you soon.');
            form.reset();
          } else {
            showMessage('error', result.error || 'Failed to send message. Please try again.');
          }
        } catch (error) {
          console.error('Form submission error:', error);
          showMessage('error', 'Network error. Please check your connection and try again.');
        } finally {
          setLoading(false);
        }
      });
    });
  </script>
</Layout> 